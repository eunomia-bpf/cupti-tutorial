#pragma once

#include <nvperf_host.h>
#include <nvperf_cuda_host.h>
#include <nvperf_target.h>

// Compatibility layer for NVPERF API
// This adapts the old API code to the new NVPERF API in CUDA 11+

// Define the field mappings between old and new API
#define NVPW_CUDA_MetricsContext_Create_Params NVPW_CUDA_RawMetricsConfig_Create_Params
#define NVPW_CUDA_MetricsContext_Create_Params_STRUCT_SIZE NVPW_CUDA_RawMetricsConfig_Create_Params_STRUCT_SIZE
#define NVPW_CUDA_MetricsContext_Create NVPW_CUDA_RawMetricsConfig_Create

#define NVPW_MetricsContext_Destroy_Params NVPW_RawMetricsConfig_Destroy_Params
#define NVPW_MetricsContext_Destroy_Params_STRUCT_SIZE NVPW_RawMetricsConfig_Destroy_Params_STRUCT_SIZE
#define NVPW_MetricsContext_Destroy NVPW_RawMetricsConfig_Destroy

#define NVPW_MetricsContext_GetMetricNames_Begin_Params NVPW_RawMetricsConfig_GetMetricNames_Begin_Params
#define NVPW_MetricsContext_GetMetricNames_Begin_Params_STRUCT_SIZE NVPW_RawMetricsConfig_GetMetricNames_Begin_Params_STRUCT_SIZE
#define NVPW_MetricsContext_GetMetricNames_Begin NVPW_RawMetricsConfig_GetMetricNames_Begin

#define NVPW_MetricsContext_GetMetricNames_End_Params NVPW_RawMetricsConfig_GetMetricNames_End_Params
#define NVPW_MetricsContext_GetMetricNames_End_Params_STRUCT_SIZE NVPW_RawMetricsConfig_GetMetricNames_End_Params_STRUCT_SIZE
#define NVPW_MetricsContext_GetMetricNames_End NVPW_RawMetricsConfig_GetMetricNames_End

#define NVPW_MetricsContext_GetMetricProperties_Begin_Params NVPW_RawMetricsConfig_GetMetricProperties_Begin_Params
#define NVPW_MetricsContext_GetMetricProperties_Begin_Params_STRUCT_SIZE NVPW_RawMetricsConfig_GetMetricProperties_Begin_Params_STRUCT_SIZE
#define NVPW_MetricsContext_GetMetricProperties_Begin NVPW_RawMetricsConfig_GetMetricProperties_Begin

#define NVPW_MetricsContext_GetMetricProperties_End_Params NVPW_RawMetricsConfig_GetMetricProperties_End_Params
#define NVPW_MetricsContext_GetMetricProperties_End_Params_STRUCT_SIZE NVPW_RawMetricsConfig_GetMetricProperties_End_Params_STRUCT_SIZE
#define NVPW_MetricsContext_GetMetricProperties_End NVPW_RawMetricsConfig_GetMetricProperties_End

// Define type mappings
#define NVPA_MetricsContext NVPA_RawMetricsConfig

// Helper functions for API compatibility
inline NVPA_Status CreateMetricsEvaluator(NVPA_RawMetricsConfig* pRawMetricsConfig, NVPA_MetricsEvaluator** ppMetricsEvaluator) {
    NVPW_CUDA_MetricsEvaluator_Initialize_Params createParams = {NVPW_CUDA_MetricsEvaluator_Initialize_Params_STRUCT_SIZE};
    createParams.pRawMetricsConfig = pRawMetricsConfig;
    NVPA_Status status = NVPW_CUDA_MetricsEvaluator_Initialize(&createParams);
    *ppMetricsEvaluator = createParams.pMetricsEvaluator;
    return status;
}

// Wrapper for SetCounterData to use MetricsEvaluator
inline NVPA_Status NVPW_MetricsContext_SetCounterData(NVPW_MetricsEvaluator_SetUserData_Params* pParams) {
    return NVPW_MetricsEvaluator_SetUserData(pParams);
}

// Wrapper for EvaluateToGpuValues to use MetricsEvaluator
inline NVPA_Status NVPW_MetricsContext_EvaluateToGpuValues(NVPW_MetricsEvaluator_EvaluateToGpuValues_Params* pParams) {
    return NVPW_MetricsEvaluator_EvaluateToGpuValues(pParams);
}

// Define parameter type mappings
#define NVPW_MetricsContext_SetCounterData_Params NVPW_MetricsEvaluator_SetUserData_Params
#define NVPW_MetricsContext_SetCounterData_Params_STRUCT_SIZE NVPW_MetricsEvaluator_SetUserData_Params_STRUCT_SIZE

#define NVPW_MetricsContext_EvaluateToGpuValues_Params NVPW_MetricsEvaluator_EvaluateToGpuValues_Params
#define NVPW_MetricsContext_EvaluateToGpuValues_Params_STRUCT_SIZE NVPW_MetricsEvaluator_EvaluateToGpuValues_Params_STRUCT_SIZE 